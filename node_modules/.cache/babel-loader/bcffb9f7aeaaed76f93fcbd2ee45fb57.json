{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/report/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/report/Report.vue","mtime":1611373957172},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//1.导入echarts\nimport echarts from 'echarts';\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    //需要合并的数据\n    return {\n      options: {\n        title: {\n          text: '用户来源'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#E9EEF3'\n            }\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          boundaryGap: false\n        }],\n        yAxis: [{\n          type: 'value'\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  //此时，页面上的元素已经被渲染完毕\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var myChart, _ref, res, result;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 3.基于准备好的dom，初始化echarts实例\n              myChart = echarts.init(document.getElementById('main'));\n              _context.next = 3;\n              return this.$http.get('reports/type/1');\n\n            case 3:\n              _ref = _context.sent;\n              res = _ref.data;\n\n              if (!(res.meta.status !== 200)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", this.$message.error('获取折线图数据失败！'));\n\n            case 7:\n              //4.准备数据和配置项\n              result = _.merge(res.data, this.options); //5.展示数据\n\n              myChart.setOption(result);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {}\n};",{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,OAAA,EAAA;AAAA,UAAA,OAAA,EAAA,MAAA;AAAA,UAAA,WAAA,EAAA;AAAA,YAAA,IAAA,EAAA,OAAA;AAAA,YAAA,KAAA,EAAA;AAAA,cAAA,eAAA,EAAA;AAAA;AAAA;AAAA,SAFA;AAGA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAHA;AASA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA,WAAA,EAAA;AAAA,SAAA,CATA;AAUA,QAAA,KAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAVA;AADA,KAAA;AAeA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA,CAAA,CAnBA;AAoBA;AACA,EAAA,OArBA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA,cAAA,OAvBA,GAuBA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAvBA;AAAA;AAAA,qBAyBA,KAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAzBA;;AAAA;AAAA;AAyBA,cAAA,GAzBA,QAyBA,IAzBA;;AAAA,oBA0BA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GA1BA;AAAA;AAAA;AAAA;;AAAA,+CA2BA,KAAA,QAAA,CAAA,KAAA,CAAA,YAAA,CA3BA;;AAAA;AA8BA;AACA,cAAA,MA/BA,GA+BA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CA/BA,EAiCA;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqCA,EAAA,OAAA,EAAA;AArCA,CAAA","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>数据统计</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>数据报表</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图区域 -->\n\t\t<el-card>\n\t\t\t  <!-- 2.为ECharts准备一个具备大小（宽高）的Dom -->\n\t\t\t    <div id=\"main\" style=\"width: 750px;height:400px;\"></div>\n\t\t</el-card>\n\t</div>\n</template>\n\n<script>\n//1.导入echarts\nimport echarts from 'echarts'\nimport _ from 'lodash'\n\t\nexport default {\n\tdata(){\n\t\t//需要合并的数据\n\t\treturn {\n\t\t\toptions: {\n\t\t\t          title: { text: '用户来源'},\n\t\t\t          tooltip: { trigger: 'axis', axisPointer: { type: 'cross', label: { backgroundColor: '#E9EEF3'}} },\n\t\t\t          grid: {\n\t\t\t            left: '3%',\n\t\t\t            right: '4%',\n\t\t\t            bottom: '3%',\n\t\t\t            containLabel: true\n\t\t\t          },\n\t\t\t          xAxis: [{ boundaryGap: false}],\n\t\t\t          yAxis: [{ type: 'value'}]\n\t\t\t        }\n\t\t}\n\n\t},\n\tcreated() {},\n\t//此时，页面上的元素已经被渲染完毕\n\tasync mounted() {\n\t\t// 3.基于准备好的dom，初始化echarts实例\n\t\tvar myChart = echarts.init(document.getElementById('main'))\n\t\t\n\t\tconst {data: res} = await this.$http.get('reports/type/1')\n\t\tif(res.meta.status !== 200){\n\t\t\treturn this.$message.error('获取折线图数据失败！')\n\t\t}\n\t\t\t\t\n\t\t//4.准备数据和配置项\n\t\tconst result = _.merge(res.data, this.options)\n\t\t\t\t\n\t\t//5.展示数据\n\t\tmyChart.setOption(result)\n\n\t},\n\tmethods: {}\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"],"sourceRoot":"src/components/report"}]}