{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Cate.vue","mtime":1611028563267},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //查询条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      //商品分类的数据列表，默认为空\n      catelist: [],\n      //总数据条数\n      total: 0,\n      //为table指定列的定义\n      columns: [{\n        label: '分类名称',\n        prop: 'cat_name'\n      }, {\n        label: '是否有效',\n        //表示，将当前列定义为模版列\n        type: 'template',\n        //表示当前这一列使用模版名称\n        template: 'isok'\n      }, {\n        label: '排序',\n        //表示，将当前列定义为模版列\n        type: 'template',\n        //表示当前这一列使用模版名称\n        template: 'order'\n      }, {\n        label: '操作',\n        //表示，将当前列定义为模版列\n        type: 'template',\n        //表示当前这一列使用模版名称\n        template: 'opt'\n      }],\n      //控制添加分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      //添加分类的表单数据对象\n      addCateForm: {\n        //将要添加的分类的名称\n        cat_name: '',\n        //父级分类的Id\n        cat_pid: 0,\n        //分类的等级，默认要添加的是1级分类\n        cat_level: 0\n      },\n      //添加分类表单的验证规则对象\n      addCateFormRules: {\n        cat_name: [{\n          required: true,\n          message: '请输入分类名称',\n          trigger: 'blur'\n        }]\n      },\n      //父级分类的列表\n      parentCateList: [],\n      //指定级联选择器的配置对象\n      cascaderProps: {\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      //选中的父级分类的Id数组\n      selectedKeys: []\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    //获取商品分类数据\n    getCateList: function () {\n      var _getCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('categories', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取商品分类失败！'));\n\n              case 6:\n                console.log(res.data); //把数据列表赋值给catelist\n\n                this.catelist = res.data.result; //为总数据条数赋值\n\n                this.total = res.data.total;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCateList() {\n        return _getCateList.apply(this, arguments);\n      }\n\n      return getCateList;\n    }(),\n    //监听pagesize改变\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getCateList();\n    },\n    //监听pagenum改变\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getCateList();\n    },\n    //点击按钮，展示添加分类的对话框\n    showAddCateDialog: function showAddCateDialog() {\n      //先获取父级分类的数据列表\n      this.getParentCateList(); //再展示出对话框\n\n      this.addCateDialogVisible = true;\n    },\n    //获取父级分类的数据列表\n    getParentCateList: function () {\n      var _getParentCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('categories', {\n                  params: {\n                    type: 2\n                  }\n                });\n\n              case 2:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取父级分类数据失败！'));\n\n              case 6:\n                console.log(res.data);\n                this.parentCateList = res.data;\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getParentCateList() {\n        return _getParentCateList.apply(this, arguments);\n      }\n\n      return getParentCateList;\n    }(),\n    //选择项发生变化触发这个函数\n    parentCateChanged: function parentCateChanged() {\n      console.log(this.selectedKeys); //如果selectedKeys数组中的length大于0，证明选中的父级分类，反之，就说明没有选中任何父级分类\n\n      if (this.selectedKeys.length > 0) {\n        //父级分类的id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]; //为当前分类的等级赋值\n\n        this.addCateForm.cat_level = this.selectedKeys.length;\n        return;\n      } else {\n        //父级分类的id\n        this.addCateForm.cat_pid = 0; //为当前分类的等级赋值\n\n        this.addCateForm.cat_level = 0;\n      }\n    },\n    //点击按钮，添加新的分类\n    addCate: function addCate() {\n      var _this = this;\n\n      this.$refs.addCateFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(valid) {\n          var _ref4, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this.$http.post('categories', _this.addCateForm);\n\n                case 4:\n                  _ref4 = _context3.sent;\n                  res = _ref4.data;\n\n                  if (!(res.meta.status !== 201)) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('添加分类失败！'));\n\n                case 8:\n                  _this.$message.success('添加分类成功！');\n\n                  _this.getCateList();\n\n                  _this.addCateDialogVisible = false;\n\n                case 11:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    //监听对话框的关闭事件，重置表单数据\n    addCateDialogClosed: function addCateDialogClosed() {\n      this.$refs.addCateFormRef.resetFields();\n      this.selectedKeys = [];\n      this.addCateForm.cat_level = 0;\n      this.addCateForm.cat_pid = 0;\n    }\n  }\n};",{"version":3,"sources":["Cate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图区域 -->\n\t\t<el-card>\n\t\t\t<el-row>\n\t\t\t\t<el-col>\n\t\t\t\t\t<el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t\t\n\t\t\t<!-- 表格 -->\n\t\t\t<tree-table class=\"treeTable\" :data=\"catelist\" :columns=\"columns\"\n\t\t\t:selection-type=\"false\" :expand-type=\"false\"\n\t\t\tshow-index index-text=\"#\" border :show-row-hover=\"false\">\n\t\t\t<!-- 是否有效 -->\n\t\t\t<template slot=\"isok\" slot-scope=\"scope\">\n\t\t\t\t<i class=\"el-icon-success\" \n\t\t\t\tv-if=\"scope.row.cat_deleted === false\"\n\t\t\t\tstyle=\"color: lightgreen;\"></i>\n\t\t\t\t<i class=\"el-icon-error\" v-else\n\t\t\t\tstyle=\"color: red;\"></i>\n\t\t\t</template>\n\t\t\t<!-- 排序 -->\n\t\t\t<template slot=\"order\" slot-scope=\"scope\">\n\t\t\t\t<el-tag size=\"mini\"\n\t\t\t\tv-if=\"scope.row.cat_level === 0\">一级</el-tag>\n\t\t\t\t<el-tag type=\"success\" size=\"mini\"\n\t\t\t\tv-else-if=\"scope.row.cat_level === 1\">二级</el-tag>\n\t\t\t\t<el-tag type=\"warning\" size=\"mini\"\n\t\t\t\tv-else>三级</el-tag>\n\t\t\t</template>\n\t\t\t<!-- 操作 -->\n\t\t\t<template slot=\"opt\" slot-scope=\"scope\">\n\t\t\t\t<el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\n\t\t\t\t<el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\n\t\t\t</template>\n\t\t\t</tree-table>\n\t\t\t<!-- 分页区域 -->\n\t\t\t <el-pagination\n\t\t\t      @size-change=\"handleSizeChange\"\n\t\t\t      @current-change=\"handleCurrentChange\"\n\t\t\t      :current-page=\"queryInfo.pagenum\"\n\t\t\t      :page-sizes=\"[3, 5, 10, 15]\"\n\t\t\t      :page-size=\"queryInfo.pagesize\"\n\t\t\t      layout=\"total, sizes, prev, pager, next, jumper\"\n\t\t\t      :total=\"total\">\n\t\t\t    </el-pagination>\n\t\t</el-card>\n\t\t\n\t\t<!-- 添加分类的对话框 -->\n\t\t<el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\"\n\t\t width=\"50%\" @close=\"addCateDialogClosed\">\n\t\t  <!-- 添加分类的表单 -->\n\t\t  <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\n\t\t    <el-form-item label=\"分类名称:\" prop=\"cat_name\">\n\t\t      <el-input v-model=\"addCateForm.cat_name\"></el-input>\n\t\t    </el-form-item>\n\t\t\t<el-form-item label=\"父级分类:\">\n\t\t\t\t<!-- options 用来指定数据源 -->\n\t\t\t\t<!-- props 用来指定配置对象 -->\n\t\t\t\t <el-cascader expandTrigger=\"hover\" v-model=\"selectedKeys\" :options=\"parentCateList\"\n\t\t\t\t    :props=\"cascaderProps\" @change=\"parentCateChanged\" clearable change-on-select></el-cascader>\n\t\t\t  \n\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t//查询条件\n\t\t\tqueryInfo: {\n\t\t\t\ttype: 3,\n\t\t\t\tpagenum: 1,\n\t\t\t\tpagesize: 5\n\t\t\t},\n\t\t\t//商品分类的数据列表，默认为空\n\t\t\tcatelist: [],\n\t\t\t//总数据条数\n\t\t\ttotal: 0,\n\t\t\t//为table指定列的定义\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\tlabel: '分类名称',\n\t\t\t\t\tprop: 'cat_name'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tlabel: '是否有效',\n\t\t\t\t//表示，将当前列定义为模版列\n\t\t\t\ttype:'template',\n\t\t\t\t//表示当前这一列使用模版名称\n\t\t\t\ttemplate: 'isok',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tlabel: '排序',\n\t\t\t\t//表示，将当前列定义为模版列\n\t\t\t\ttype:'template',\n\t\t\t\t//表示当前这一列使用模版名称\n\t\t\t\ttemplate: 'order',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tlabel: '操作',\n\t\t\t\t//表示，将当前列定义为模版列\n\t\t\t\ttype:'template',\n\t\t\t\t//表示当前这一列使用模版名称\n\t\t\t\ttemplate: 'opt',\n\t\t\t\t}\n\t\t\t],\n\t\t\t//控制添加分类对话框的显示与隐藏\n\t\t\taddCateDialogVisible: false,\n\t\t\t//添加分类的表单数据对象\n\t\t\taddCateForm: {\n\t\t\t\t//将要添加的分类的名称\n\t\t\t\tcat_name: '',\n\t\t\t\t//父级分类的Id\n\t\t\t\tcat_pid: 0,\n\t\t\t\t//分类的等级，默认要添加的是1级分类\n\t\t\t\tcat_level: 0\n\t\t\t},\n\t\t\t//添加分类表单的验证规则对象\n\t\t\taddCateFormRules: {\n\t\t\t\tcat_name: [\n\t\t\t\t\t{ required: true, message: '请输入分类名称', trigger: 'blur' }\n\t\t\t\t]\n\t\t\t},\n\t\t\t//父级分类的列表\n\t\t\tparentCateList: [],\n\t\t\t//指定级联选择器的配置对象\n\t\t\tcascaderProps: {\n\t\t\t\tvalue: 'cat_id',\n\t\t\t\tlabel: 'cat_name',\n\t\t\t\tchildren: 'children'\n\t\t\t},\n\t\t\t//选中的父级分类的Id数组\n\t\t\tselectedKeys: []\n\t\t}\n\t},\n\tcreated(){\n\t\tthis.getCateList()\n\t},\n\tmethods: {\n\t\t//获取商品分类数据\n\t\tasync getCateList(){\n\t\t\tconst {data: res} = await this.$http.get('categories', { params: this.queryInfo })\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取商品分类失败！')\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log(res.data)\n\t\t\t//把数据列表赋值给catelist\n\t\t\tthis.catelist = res.data.result\n\t\t\t//为总数据条数赋值\n\t\t\tthis.total = res.data.total\n\t\t},\n\t\t//监听pagesize改变\n\t\thandleSizeChange(newSize){\n\t\t\tthis.queryInfo.pagesize = newSize\n\t\t\tthis.getCateList()\n\t\t},\n\t\t//监听pagenum改变\n\t\thandleCurrentChange(newPage){\n\t\t\tthis.queryInfo.pagenum = newPage\n\t\t\tthis.getCateList()\n\t\t},\n\t\t//点击按钮，展示添加分类的对话框\n\t\tshowAddCateDialog(){\n\t\t\t//先获取父级分类的数据列表\n\t\t\tthis.getParentCateList()\n\t\t\t//再展示出对话框\n\t\t\tthis.addCateDialogVisible = true\n\t\t},\n\t\t//获取父级分类的数据列表\n\t\tasync getParentCateList(){\n\t\t\tconst {data: res} = await this.$http.get('categories', { params: { type: 2}})\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取父级分类数据失败！')\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log(res.data)\n\t\t\tthis.parentCateList = res.data\n\t\t},\n\t\t//选择项发生变化触发这个函数\n\t\tparentCateChanged(){\n\t\t\tconsole.log(this.selectedKeys)\n\t\t\t//如果selectedKeys数组中的length大于0，证明选中的父级分类，反之，就说明没有选中任何父级分类\n\t\t\tif(this.selectedKeys.length > 0){\n\t\t\t\t//父级分类的id\n\t\t\t\tthis.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n\t\t\t\t//为当前分类的等级赋值\n\t\t\t\tthis.addCateForm.cat_level = this.selectedKeys.length\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\t//父级分类的id\n\t\t\t\tthis.addCateForm.cat_pid = 0\n\t\t\t\t//为当前分类的等级赋值\n\t\t\t\tthis.addCateForm.cat_level = 0\n\t\t\t}\n\t\t},\n\t\t//点击按钮，添加新的分类\n\t\taddCate(){\n\t\t\tthis.$refs.addCateFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return\n\t\t\t\tconst {data: res} = await this.$http.post('categories', this.addCateForm)\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 201){\n\t\t\t\t\treturn this.$message.error('添加分类失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('添加分类成功！')\n\t\t\t\tthis.getCateList()\n\t\t\t\tthis.addCateDialogVisible = false\n\t\t\t})\n\t\t},\n\t\t//监听对话框的关闭事件，重置表单数据\n\t\taddCateDialogClosed(){\n\t\t\tthis.$refs.addCateFormRef.resetFields()\n\t\t\tthis.selectedKeys = []\n\t\t\tthis.addCateForm.cat_level = 0\n\t\t\tthis.addCateForm.cat_pid = 0\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"less\" scoped>\n\t.treeTable{\n\t\tmargin-top: 15px;\n\t}\n\t.el-cascader{\n\t\twidth: 100%;\n\t}\n</style>\n"],"sourceRoot":"src/components/goods"}]}