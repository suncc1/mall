{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Add.vue","mtime":1611326920953},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      activeIndex: '0',\n      //添加商品的表单数据对象\n      addForm: {\n        goods_name: '',\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        //商品所属的分类数组\n        goods_cat: [],\n        //图片的数组\n        pics: [],\n        //商品的详情描述\n        goods_introduce: '',\n        attrs: []\n      },\n      addFormRules: {\n        goods_name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        goods_price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }],\n        goods_weight: [{\n          required: true,\n          message: '请输入商品重量',\n          trigger: 'blur'\n        }],\n        goods_number: [{\n          required: true,\n          message: '请输入商品数量',\n          trigger: 'blur'\n        }],\n        goods_cat: [{\n          required: true,\n          message: '请选择商品分类',\n          trigger: 'blur'\n        }]\n      },\n      //商品分类列表\n      catelist: [],\n      cateProps: {\n        label: 'cat_name',\n        value: 'cat_id',\n        children: 'children'\n      },\n      //动态参数列表数据\n      manyTableData: [],\n      //静态属性列表数据\n      onlyTableData: [],\n      //上传图片的URL地址\n      uploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\n      //图片上传组件的headers请求头对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem('token')\n      },\n      previewPath: '',\n      previewVisible: false\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    //获取所有商品分类数据\n    getCateList: function () {\n      var _getCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('categories');\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取商品分类数据失败！'));\n\n              case 6:\n                this.catelist = res.data;\n                console.log(this.catelist);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCateList() {\n        return _getCateList.apply(this, arguments);\n      }\n\n      return getCateList;\n    }(),\n    //级联选择器选中项变化，会触发该函数\n    handleChange: function handleChange() {\n      console.log(this.addForm.goods_cat);\n\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = [];\n      }\n    },\n    beforeTabLeave: function beforeTabLeave(activeName, oldActiveName) {\n      if (oldActiveName === '0' && this.addForm.goods_cat.length !== 3) {\n        this.$message.error('请先选择商品分类！');\n        return false;\n      }\n    },\n    tabClicked: function () {\n      var _tabClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, res, _ref3, _res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.activeIndex === '1')) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.$http.get(\"categories/\".concat(this.cateId, \"/attributes\"), {\n                  params: {\n                    sel: 'many'\n                  }\n                });\n\n              case 3:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取参数列表失败！'));\n\n              case 7:\n                console.log(res.data);\n                res.data.forEach(function (item) {\n                  item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ');\n                });\n                this.manyTableData = res.data;\n                _context2.next = 21;\n                break;\n\n              case 12:\n                if (!(this.activeIndex === '2')) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                _context2.next = 15;\n                return this.$http.get(\"categories/\".concat(this.cateId, \"/attributes\"), {\n                  params: {\n                    sel: 'only'\n                  }\n                });\n\n              case 15:\n                _ref3 = _context2.sent;\n                _res = _ref3.data;\n\n                if (!(_res.meta.status !== 200)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取静态属性失败！'));\n\n              case 19:\n                console.log(_res.data);\n                this.onlyTableData = _res.data;\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function tabClicked() {\n        return _tabClicked.apply(this, arguments);\n      }\n\n      return tabClicked;\n    }(),\n    //处理图片预览效果\n    handlePreview: function handlePreview(file) {\n      console.log(file);\n      this.previewPath = file.response.data.url;\n      this.previewVisible = true;\n    },\n    //处理移除图片的操作\n    handleRemove: function handleRemove(file) {\n      console.log(file); //1.获取将要删除的图片的临时路径\n\n      var filePath = file.response.data.tmp_path; //2.从pics数组中，找到这个图片对应的索引值\n\n      var i = this.addForm.pics.findIndex(function (x) {\n        return x.pic === filePath;\n      }); //3.调用数组的splice方法，把图片信息对象，从pics数组中移除\n\n      this.addForm.pics.splice(i, 1);\n      console.log(this.addForm);\n    },\n    //监听图片上传成功的事件\n    handleSuccess: function handleSuccess(response) {\n      console.log(response); //1.拼接得到一个图片信息对象\n\n      var picInfo = {\n        pic: response.data.tmp_path //2.将图片信息对象，push到pics数组中\n\n      };\n      this.addForm.pics.push(picInfo);\n      console.log(this.addForm);\n    },\n    //添加商品\n    add: function add() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(valid) {\n          var form, _ref5, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('请填写必要的表单项！'));\n\n                case 2:\n                  //执行添加的业务逻辑\n                  //lodash cloneDeep(obj)\n                  form = _.cloneDeep(_this.addForm);\n                  form.goods_cat = form.goods_cat.join(','); //处理动态参数\n\n                  _this.manyTableData.forEach(function (item) {\n                    var newInfo = {\n                      attr_id: item.attr_id,\n                      attr_vals: item.attr_vals.join(' ')\n                    };\n\n                    _this.addForm.attrs.push(newInfo);\n                  }); //处理静态属性\n\n\n                  _this.onlyTableData.forEach(function (item) {\n                    var newInfo = {\n                      attr_id: item.attr_id,\n                      attr_vals: item.attr_vals\n                    };\n\n                    _this.addForm.attrs.push(newInfo);\n                  });\n\n                  form.attrs = _this.addForm.attrs;\n                  console.log(form); //发起请求添加商品\n                  //商品的名称，必须是唯一的\n\n                  _context3.next = 10;\n                  return _this.$http.post('goods', form);\n\n                case 10:\n                  _ref5 = _context3.sent;\n                  res = _ref5.data;\n\n                  if (!(res.meta.status !== 201)) {\n                    _context3.next = 14;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('添加商品失败！'));\n\n                case 14:\n                  _this.$message.success('添加商品成功！');\n\n                  _this.$router.push('/goods');\n\n                case 16:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  computed: {\n    cateId: function cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2];\n      }\n\n      return null;\n    }\n  }\n};",{"version":3,"sources":["Add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图区域 -->\n\t\t<el-card>\n\t\t\t<!-- 提示区域 -->\n\t\t\t<el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\">\n\t\t\t  </el-alert>\n\t\t\t  <!-- 步骤条区域 -->\n\t\t\t  <el-steps :space=\"200\" :active=\"activeIndex - 0\" finish-status=\"success\" align-center>\n\t\t\t    <el-step title=\"基本信息\"></el-step>\n\t\t\t    <el-step title=\"商品参数\"></el-step>\n\t\t\t    <el-step title=\"商品属性\"></el-step>\n\t\t\t\t <el-step title=\"商品图片\"></el-step>\n\t\t\t\t  <el-step title=\"商品内容\"></el-step>\n\t\t\t\t   <el-step title=\"完成\"></el-step>\n\t\t\t  </el-steps>\n\t\t\t  \n\t\t\t  <!-- tab栏区域 -->\n\t\t\t  <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\" label-position=\"top\">\n\t\t\t   <el-tabs v-model=\"activeIndex\" :tab-position=\"'left'\"\n\t\t\t   :before-leave=\"beforeTabLeave\" @tab-click=\"tabClicked\">\n\t\t\t      <el-tab-pane label=\"基本信息\" name=\"0\">\n\t\t\t\t\t  <el-form-item label=\"商品名称\" prop=\"goods_name\">\n\t\t\t\t\t\t  <el-input v-model=\"addForm.goods_name\"></el-input>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t\t  <el-form-item label=\"商品价格\" prop=\"goods_price\">\n\t\t\t\t\t  \t  <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t\t  <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n\t\t\t\t\t  \t  <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t\t  <el-form-item label=\"商品数量\" prop=\"goods_number\">\n\t\t\t\t\t  \t  <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t\t  <el-form-item label=\"商品分类\" prop=\"goods_cat\">\n\t\t\t\t\t\t   <el-cascader\n\t\t\t\t\t\t      v-model=\"addForm.goods_cat\"\n\t\t\t\t\t\t      :options=\"catelist\"\n\t\t\t\t\t\t      expand-trigger=\"hover\"\n\t\t\t\t\t\t\t  :props=\"cateProps\"\n\t\t\t\t\t\t      @change=\"handleChange\"></el-cascader>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t  </el-tab-pane>\n\t\t\t      <el-tab-pane label=\"商品参数\" name=\"1\">\n\t\t\t\t\t  <!-- 渲染表单的Item项 -->\n\t\t\t\t\t  <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTableData\" :key=\"item.attr_id\">\n\t\t\t\t\t\t  <!-- 复选框组 -->\n\t\t\t\t\t\t    <el-checkbox-group v-model=\"item.attr_vals\">\n\t\t\t\t\t\t      <el-checkbox :label=\"cb\" v-for=\"(cb, i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n\t\t\t\t\t\t    </el-checkbox-group>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t  </el-tab-pane>\n\t\t\t      <el-tab-pane label=\"商品属性\" name=\"2\">\n\t\t\t\t\t  <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.attr_id\">\n\t\t\t\t\t\t  <el-input v-model=\"item.attr_vals\"></el-input>\n\t\t\t\t\t  </el-form-item>\n\t\t\t\t  </el-tab-pane>\n\t\t\t      <el-tab-pane label=\"商品图片\" name=\"3\">\n\t\t\t\t\t  <!-- action表示图片要上传到的后台API地址 -->\n\t\t\t\t\t  <el-upload :action=\"uploadURL\" :on-preview=\"handlePreview\"\n\t\t\t\t\t    :on-remove=\"handleRemove\" list-type=\"picture\" :headers=\"headerObj\"\n\t\t\t\t\t\t:on-success=\"handleSuccess\">\n\t\t\t\t\t    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n\t\t\t\t\t  </el-upload>\n\t\t\t\t  </el-tab-pane>\n\t\t\t\t  <el-tab-pane label=\"商品内容\" name=\"4\">\n\t\t\t\t\t  <!-- 富文本编辑器组件 -->\n\t\t\t\t\t  <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n\t\t\t\t\t  <!-- 添加商品的按钮 -->\n\t\t\t\t\t  <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\n\t\t\t\t  </el-tab-pane>\n\t\t\t    </el-tabs>\n\t\t\t\t</el-form>\n\t\t\t\t\n\t\t</el-card>\n\t\t\n\t\t<!-- 图片预览 -->\n\t\t<el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\n\t\t <img :src=\"previewPath\" class=\"previewImg\"/>\n\t\t</el-dialog>\n\n\t</div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\t\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\tactiveIndex: '0',\n\t\t\t//添加商品的表单数据对象\n\t\t\taddForm: {\n\t\t\t\tgoods_name: '',\n\t\t\t\tgoods_price: 0,\n\t\t\t\tgoods_weight: 0,\n\t\t\t\tgoods_number: 0,\n\t\t\t\t//商品所属的分类数组\n\t\t\t\tgoods_cat: [],\n\t\t\t\t//图片的数组\n\t\t\t\tpics: [],\n\t\t\t\t//商品的详情描述\n\t\t\t\tgoods_introduce: '',\n\t\t\t\tattrs: []\n\t\t\t\t\n\t\t\t},\n\t\t\taddFormRules: {\n\t\t\t\tgoods_name: [\n\t\t\t\t\t{ required: true, message: '请输入商品名称', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tgoods_price: [\n\t\t\t\t\t{ required: true, message: '请输入商品价格', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tgoods_weight: [\n\t\t\t\t\t{ required: true, message: '请输入商品重量', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tgoods_number: [\n\t\t\t\t\t{ required: true, message: '请输入商品数量', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tgoods_cat: [\n\t\t\t\t\t{ required: true, message: '请选择商品分类', trigger: 'blur'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t//商品分类列表\n\t\t\tcatelist: [],\n\t\t\tcateProps: {\n\t\t\t\tlabel: 'cat_name',\n\t\t\t\tvalue: 'cat_id',\n\t\t\t\tchildren: 'children'\n\t\t\t},\n\t\t\t//动态参数列表数据\n\t\t\tmanyTableData: [],\n\t\t\t//静态属性列表数据\n\t\t\tonlyTableData: [],\n\t\t\t//上传图片的URL地址\n\t\t\tuploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\n\t\t\t//图片上传组件的headers请求头对象\n\t\t\theaderObj: {\n\t\t\t\tAuthorization: window.sessionStorage.getItem('token')\n\t\t\t},\n\t\t\tpreviewPath: '',\n\t\t\tpreviewVisible: false\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getCateList()\n\t},\n\tmethods: {\n\t\t//获取所有商品分类数据\n\t\tasync getCateList(){\n\t\t\tconst{data: res} = await this.$http.get('categories')\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取商品分类数据失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.catelist = res.data\n\t\t\tconsole.log(this.catelist)\n\t\t},\n\t\t//级联选择器选中项变化，会触发该函数\n\t\thandleChange(){\n\t\t\tconsole.log(this.addForm.goods_cat)\n\t\t\tif(this.addForm.goods_cat.length !== 3){\n\t\t\t\tthis.addForm.goods_cat = []\n\t\t\t}\n\t\t},\n\t\tbeforeTabLeave(activeName, oldActiveName){\n\t\t\tif(oldActiveName === '0' && this.addForm.goods_cat.length !== 3){\n\t\t\t\tthis.$message.error('请先选择商品分类！')\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\t\tasync tabClicked(){\n\t\t\t// console.log(this.activeIndex)\n\t\t\t//证明访问的是动态参数面板\n\t\t\tif(this.activeIndex === '1'){\n\t\t\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes`, {params: {sel: 'many'}})\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\treturn this.$message.error('获取参数列表失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log(res.data)\n\t\t\t\tres.data.forEach(item => {\n\t\t\t\t\titem.attr_vals = item.attr_vals.length === 0\n\t\t\t\t\t? [] : item.attr_vals.split(' ')\n\t\t\t\t})\n\t\t\t\tthis.manyTableData = res.data\n\t\t\t} else if (this.activeIndex === '2'){\n\t\t\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes`, {\n\t\t\t\t\tparams: { sel: 'only' }\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\treturn this.$message.error('获取静态属性失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log(res.data)\n\t\t\t\tthis.onlyTableData = res.data\n\t\t\t}\n\t\t},\n\t\t//处理图片预览效果\n\t\thandlePreview(file){\n\t\t\tconsole.log(file)\n\t\t\tthis.previewPath = file.response.data.url\n\t\t\tthis.previewVisible = true\n\t\t},\n\t\t//处理移除图片的操作\n\t\thandleRemove(file){\n\t\t\tconsole.log(file)\n\t\t\t//1.获取将要删除的图片的临时路径\n\t\t\tconst filePath = file.response.data.tmp_path\n\t\t\t//2.从pics数组中，找到这个图片对应的索引值\n\t\t\tconst i = this.addForm.pics.findIndex(x => x.pic === filePath)\n\t\t\t//3.调用数组的splice方法，把图片信息对象，从pics数组中移除\n\t\t\tthis.addForm.pics.splice(i, 1)\n\t\t\tconsole.log(this.addForm)\n\t\t},\n\t\t//监听图片上传成功的事件\n\t\thandleSuccess(response){\n\t\t\tconsole.log(response)\n\t\t\t//1.拼接得到一个图片信息对象\n\t\t\tconst picInfo = { pic: response.data.tmp_path }\n\t\t\t//2.将图片信息对象，push到pics数组中\n\t\t\tthis.addForm.pics.push(picInfo)\n\t\t\tconsole.log(this.addForm)\n\t\t},\n\t\t//添加商品\n\t\tadd(){\n\t\t\tthis.$refs.addFormRef.validate(async valid => {\n\t\t\t\tif(!valid){\n\t\t\t\t\treturn this.$message.error('请填写必要的表单项！')\n\t\t\t\t}\n\t\t\t\t//执行添加的业务逻辑\n\t\t\t\t//lodash cloneDeep(obj)\n\t\t\t\tconst form = _.cloneDeep(this.addForm)\n\t\t\t\tform.goods_cat = form.goods_cat.join(',')\n\t\t\t\t//处理动态参数\n\t\t\t\tthis.manyTableData.forEach(item => {\n\t\t\t\t\tconst newInfo = {\n\t\t\t\t\t\tattr_id: item.attr_id,\n\t\t\t\t\t\tattr_vals: item.attr_vals.join(' ')\n\t\t\t\t\t}\n\t\t\t\t\tthis.addForm.attrs.push(newInfo)\n\t\t\t\t})\n\t\t\t\t//处理静态属性\n\t\t\t\tthis.onlyTableData.forEach(item => {\n\t\t\t\t\tconst newInfo = {\n\t\t\t\t\t\tattr_id: item.attr_id,\n\t\t\t\t\t\tattr_vals: item.attr_vals\n\t\t\t\t\t}\n\t\t\t\t\tthis.addForm.attrs.push(newInfo)\n\t\t\t\t})\n\t\t\t\tform.attrs = this.addForm.attrs\n\t\t\t\tconsole.log(form)\n\t\t\t\t\n\t\t\t\t//发起请求添加商品\n\t\t\t\t//商品的名称，必须是唯一的\n\t\t\t\tconst {data: res} = await this.$http.post('goods', form)\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 201){\n\t\t\t\t\treturn this.$message.error('添加商品失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('添加商品成功！')\n\t\t\t\tthis.$router.push('/goods')\n\t\t\t})\n\t\t}\n\t},\n\tcomputed: {\n\t\tcateId() {\n\t\t\tif(this.addForm.goods_cat.length === 3){\n\t\t\t\treturn this.addForm.goods_cat[2]\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-checkbox{\n\tmargin: 0 10px 0 0 !important;\n}\n\n.previewImg{\n\twidth: 100%;\n}\n\n.btnAdd{\n\tmargin-top: 15px;\n}\n</style>\n"],"sourceRoot":"src/components/goods"}]}