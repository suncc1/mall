{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/power/Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/power/Roles.vue","mtime":1610937357927},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //所有角色列表数据\n      rolelist: [],\n      //控制分配权限对话框的显示与隐藏\n      setRightDialogVisible: false,\n      //所有权限的数据\n      rightslist: [],\n      //树形控件的属性绑定对象\n      treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      //默认选中的节点Id值数组\n      defKeys: [],\n      //当前即将分配权限的角色id\n      roleId: ''\n    };\n  },\n  created: function created() {\n    this.getRolesList();\n  },\n  methods: {\n    //获取所有角色的列表\n    getRolesList: function () {\n      var _getRolesList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('roles');\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取角色列表失败！'));\n\n              case 6:\n                this.rolelist = res.data;\n                console.log(this.rolelist);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRolesList() {\n        return _getRolesList.apply(this, arguments);\n      }\n\n      return getRolesList;\n    }(),\n    //根据Id删除对应的权限\n    removeRightById: function () {\n      var _removeRightById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(role, rightId) {\n        var confirmResult, _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context2.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.info('取消了删除！'));\n\n              case 5:\n                _context2.next = 7;\n                return this.$http.delete(\"roles/\".concat(role.id, \"/rights/\").concat(rightId));\n\n              case 7:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('删除权限失败！'));\n\n              case 11:\n                //this.getRolesList()\n                role.children = res.data;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function removeRightById(_x, _x2) {\n        return _removeRightById.apply(this, arguments);\n      }\n\n      return removeRightById;\n    }(),\n    //展示分配权限的对话框\n    showSetRightDialog: function () {\n      var _showSetRightDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(role) {\n        var _ref3, res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.roleId = role.id; //获取所有权限的数据\n\n                _context3.next = 3;\n                return this.$http.get('rights/tree');\n\n              case 3:\n                _ref3 = _context3.sent;\n                res = _ref3.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取权限数据失败！'));\n\n              case 7:\n                //把获取到的权限数据保存到data中\n                this.rightslist = res.data;\n                console.log(this.rightslist); //递归获取三级节点的Id\n\n                this.getLeafKeys(role, this.defKeys);\n                this.setRightDialogVisible = true;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function showSetRightDialog(_x3) {\n        return _showSetRightDialog.apply(this, arguments);\n      }\n\n      return showSetRightDialog;\n    }(),\n    //通过递归的形式，获取角色下所有三级权限的id,并保存到defKeys数组中\n    getLeafKeys: function getLeafKeys(node, arr) {\n      var _this = this;\n\n      //如果当前node节点不包含children属性,则是三级节点\n      if (!node.children) {\n        return arr.push(node.id);\n      }\n\n      node.children.forEach(function (item) {\n        return _this.getLeafKeys(item, arr);\n      });\n    },\n    //监听分配权限对话框的关闭事件\n    setRightDialogClosed: function setRightDialogClosed() {\n      this.defKeys = [];\n    },\n    //点击为角色分配权限\n    allotRights: function () {\n      var _allotRights = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var keys, idStr, _ref4, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                keys = [].concat(_toConsumableArray(this.$refs.treeRef.getCheckedKeys()), _toConsumableArray(this.$refs.treeRef.getHalfCheckedKeys()));\n                idStr = keys.join(',');\n                _context4.next = 4;\n                return this.$http.post(\"roles/\".concat(this.roleId, \"/rights\"), {\n                  rids: idStr\n                });\n\n              case 4:\n                _ref4 = _context4.sent;\n                res = _ref4.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('分配权限失败！'));\n\n              case 8:\n                this.$message.success('分配权限成功！');\n                this.getRolesList();\n                this.setRightDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function allotRights() {\n        return _allotRights.apply(this, arguments);\n      }\n\n      return allotRights;\n    }()\n  }\n};",{"version":3,"sources":["Roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图 -->\n\t\t<el-card>\n\t\t\t<!-- 添加角色按钮区域 -->\n\t\t\t<el-row>\n\t\t\t\t<el-col>\n\t\t\t\t\t<el-button type=\"primary\">添加角色</el-button>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t\t\n\t\t\t<!-- 角色列表区域 -->\n\t\t\t<el-table :data=\"rolelist\" border stripe>\n\t\t\t\t<!-- 展开列 -->\n\t\t\t\t<el-table-column type=\"expand\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-row :class=\"['bdbottom', i1 === 0 ? 'bdtop' : '', 'vcenter']\" v-for=\"(item1, i1) in scope.row.children\" :key=\"item1.id\">\n\t\t\t\t\t\t\t<!-- 渲染一级权限 -->\n\t\t\t\t\t\t\t<el-col :span=\"5\">\n\t\t\t\t\t\t\t\t<el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{ item1.authName }}</el-tag>\n\t\t\t\t\t\t\t\t<i class=\"el-icon-caret-right\"></i>\n\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t\t<!-- 渲染二级和三级权限 -->\n\t\t\t\t\t\t\t<el-col :span=\"19\">\n\t\t\t\t\t\t\t\t<!-- 通过 for 循环 嵌套渲染二级权限 -->\n\t\t\t\t\t\t\t\t<el-row :class=\"[i2 === 0 ? '' : 'bdtop', 'vcenter']\" v-for=\"(item2, i2) in item1.children\" :key=\"item2.id\">\n\t\t\t\t\t\t\t\t\t<el-col :span=\"6\">\n\t\t\t\t\t\t\t\t\t\t<el-tag type=\"success\" closable\n\t\t\t\t\t\t\t\t\t\t@close=\"removeRightById(scope.row, item2.id)\">{{item2.authName}}</el-tag>\n\t\t\t\t\t\t\t\t\t\t<i class=\"el-icon-caret-right\"></i>\n\t\t\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t\t\t\t<el-col :span=\"18\">\n\t\t\t\t\t\t\t\t\t\t<el-tag type=\"warning\" v-for=\"(item3, i3) in item2.children\" :key=\"item3.id\" closable\n\t\t\t\t\t\t\t\t\t\t@close=\"removeRightById(scope.row, item3.id)\">\n\t\t\t\t\t\t\t\t\t\t\t{{item3.authName}}\n\t\t\t\t\t\t\t\t\t\t</el-tag>\n\t\t\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t\t\t</el-row>\n\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t</el-row>\n\t\t\t\t\t\t<!-- <pre>{{ scope.row }}</pre> -->\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t\t<!-- 索引列 -->\n\t\t\t\t<el-table-column type=\"index\"></el-table-column>\n\t\t\t\t<el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\n\t\t\t\t<el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\n\t\t\t\t<el-table-column label=\"操作\" width=\"300px\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\n\t\t\t\t\t\t<el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\n\t\t\t\t\t\t<el-button size=\"mini\" type=\"warning\" icon=\"el-icon-setting\" @click=\"showSetRightDialog(scope.row)\">分配权限</el-button>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\t\t</el-card>\n\t\t\n\t\t<!-- 分配权限的对话框 -->\n\t\t<el-dialog\n\t\t  title=\"分配权限\"\n\t\t  :visible.sync=\"setRightDialogVisible\"\n\t\t  width=\"50%\" @close=\"setRightDialogClosed\">\n\t\t  <!-- 树形控件 -->\n\t\t <el-tree :data=\"rightslist\" :props=\"treeProps\" show-checkbox\n\t\t node-key=\"id\" default-expand-all :default-checked-keys=\"defKeys\" ref=\"treeRef\"></el-tree>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\t//所有角色列表数据\n\t\t\trolelist: [],\n\t\t\t//控制分配权限对话框的显示与隐藏\n\t\t\tsetRightDialogVisible: false,\n\t\t\t//所有权限的数据\n\t\t\trightslist: [],\n\t\t\t//树形控件的属性绑定对象\n\t\t\ttreeProps: {\n\t\t\t\tlabel: 'authName',\n\t\t\t\tchildren: 'children'\n\t\t\t},\n\t\t\t//默认选中的节点Id值数组\n\t\t\tdefKeys: [],\n\t\t\t//当前即将分配权限的角色id\n\t\t\troleId: ''\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getRolesList()\n\t},\n\tmethods: {\n\t\t//获取所有角色的列表\n\t\tasync getRolesList(){\n\t\t\tconst {data: res} = await this.$http.get('roles')\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取角色列表失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.rolelist = res.data\n\t\t\tconsole.log(this.rolelist)\n\t\t},\n\t\t//根据Id删除对应的权限\n\t\tasync removeRightById(role, rightId){\n\t\t\t//弹框提示用户是否要删除\n\t\t\tconst confirmResult = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n\t\t\t          confirmButtonText: '确定',\n\t\t\t          cancelButtonText: '取消',\n\t\t\t          type: 'warning'\n\t\t\t        }).catch(err => err)\n\t\t\t\t\t\n\t\t\t\t\tif(confirmResult !== 'confirm'){\n\t\t\t\t\t\treturn this.$message.info('取消了删除！')\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst {data: res} = await this.$http.delete(`roles/${role.id}/rights/${rightId}`)\n\t\t\t\t\t\n\t\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\t\treturn this.$message.error('删除权限失败！')\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//this.getRolesList()\n\t\t\t\t\trole.children = res.data\n\t\t},\n\t\t//展示分配权限的对话框\n\t\tasync showSetRightDialog(role){\n\t\t\tthis.roleId = role.id\n\t\t\t//获取所有权限的数据\n\t\t\tconst {data: res} = await this.$http.get('rights/tree')\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取权限数据失败！')\n\t\t\t}\n\t\t\t\n\t\t\t//把获取到的权限数据保存到data中\n\t\t\tthis.rightslist = res.data\n\t\t\tconsole.log(this.rightslist)\n\t\t\t\n\t\t\t//递归获取三级节点的Id\n\t\t\tthis.getLeafKeys(role, this.defKeys)\n\t\t\t\n\t\t\tthis.setRightDialogVisible = true\n\t\t},\n\t\t//通过递归的形式，获取角色下所有三级权限的id,并保存到defKeys数组中\n\t\tgetLeafKeys(node, arr) {\n\t\t\t//如果当前node节点不包含children属性,则是三级节点\n\t\t\tif(!node.children){\n\t\t\t\treturn arr.push(node.id)\n\t\t\t}\n\t\t\t\n\t\t\tnode.children.forEach(item =>\n\t\t\tthis.getLeafKeys(item, arr))\n\t\t},\n\t\t//监听分配权限对话框的关闭事件\n\t\tsetRightDialogClosed(){\n\t\t\tthis.defKeys = []\n\t\t},\n\t\t//点击为角色分配权限\n\t\tasync allotRights() {\n\t\t\tconst keys = [\n\t\t\t\t...this.$refs.treeRef.getCheckedKeys(),\n\t\t\t\t...this.$refs.treeRef.getHalfCheckedKeys()\n\t\t\t]\n\t\t\t\n\t\t\tconst idStr = keys.join(',')\n\t\t\t\n\t\t\tconst {data: res} = await this.$http.post\n\t\t\t(`roles/${this.roleId}/rights`, {rids: idStr})\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('分配权限失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.$message.success('分配权限成功！')\n\t\t\tthis.getRolesList()\n\t\t\tthis.setRightDialogVisible = false\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"less\" scoped>\n\t.el-tag{\n\t\tmargin: 7px;\n\t}\n\t.bdtop{\n\t\tborder-top: 1px solid #eee;\n\t}\n\t.bdbottom{\n\t\tborder-bottom: 1px solid #eee;\n\t}\n\t.vcenter{\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n</style>\n"],"sourceRoot":"src/components/power"}]}