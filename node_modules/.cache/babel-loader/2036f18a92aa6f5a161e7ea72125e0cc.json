{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/user/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/user/Users.vue","mtime":1610939502322},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    //验证邮箱的规则\n    var checkEmail = function checkEmail(rule, value, cb) {\n      //验证邮箱的正则表达式\n      var regEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\n      if (regEmail.test(value)) {\n        //合法的邮箱\n        return cb();\n      }\n\n      cb(new Error('请输入合法的邮箱'));\n    }; //验证手机号的规则\n\n\n    var checkMobile = function checkMobile(rule, value, cb) {\n      //验证手机号的正则表达式\n      var regMobile = /^1[3456789]\\d{9}$/;\n\n      if (regMobile.test(value)) {\n        return cb();\n      }\n\n      cb(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      //获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        //当前的页数\n        pagenum: 1,\n        //当前每页显示多少条数据\n        pagesize: 2\n      },\n      userlist: [],\n      total: 0,\n      //控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      //添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      //添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '密码的长度在6~15个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      //控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      //查询到的用户信息对象\n      editForm: {},\n      //修改表单的验证规则对象\n      editFormRules: {\n        email: [{\n          required: true,\n          message: '请输入用户邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入用户手机号',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      //控制分配角色对话框的显示与隐藏\n      setRoleDialogVisible: false,\n      //需要被分配角色的用户信息\n      userInfo: {},\n      //所有角色的数据列表\n      roleList: [],\n      //已选中的角色Id值\n      selectedRoleId: ''\n    };\n  },\n  created: function created() {\n    this.getUserList();\n  },\n  methods: {\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('users', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取用户列表失败！'));\n\n              case 6:\n                this.userlist = res.data.users;\n                this.total = res.data.total;\n                console.log(res);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n\n      return getUserList;\n    }(),\n    //监听pagesize改变的事件\n    handleSizeChange: function handleSizeChange(newSize) {\n      //console.log(newSize)\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    //监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      console.log(newPage);\n      this.queryInfo.pagenum = newPage;\n      this.getUserList();\n    },\n    //监听switch开关状态的改变\n    userStateChange: function () {\n      var _userStateChange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(userinfo) {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(userinfo);\n                _context2.next = 3;\n                return this.$http.put(\"users/\".concat(userinfo.id, \"/state/\").concat(userinfo.mg_state));\n\n              case 3:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                userinfo.mg_state = !userinfo.mg_state;\n                return _context2.abrupt(\"return\", this.$message.error('更新用户状态失败!'));\n\n              case 8:\n                this.$message.success('更新用户状态成功！');\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function userStateChange(_x) {\n        return _userStateChange.apply(this, arguments);\n      }\n\n      return userStateChange;\n    }(),\n    //监听添加用户对话框的关闭事件\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //点击按钮，添加新用户\n    addUser: function addUser() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(valid) {\n          var _ref4, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this.$http.post('users', _this.addForm);\n\n                case 4:\n                  _ref4 = _context3.sent;\n                  res = _ref4.data;\n\n                  if (res.meta.status !== 201) {\n                    _this.$message.error('添加用户失败！');\n                  }\n\n                  _this.$message.success('添加用户成功！'); //隐藏添加用户的对话框\n\n\n                  _this.addDialogVisible = false; //重新获取用户列表数据\n\n                  _this.getUserList();\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    //展示编辑用户的对话框\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(id) {\n        var _ref5, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$http.get('users/' + id);\n\n              case 2:\n                _ref5 = _context4.sent;\n                res = _ref5.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('查询用户信息失败！'));\n\n              case 6:\n                this.editForm = res.data;\n                this.editDialogVisible = true;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function showEditDialog(_x3) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    //监听修改用户对话框的关闭事件\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    //修改用户信息并提交\n    editUserInfo: function editUserInfo() {\n      var _this2 = this;\n\n      this.$refs.editFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref6 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee5(valid) {\n          var _ref7, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (valid) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\");\n\n                case 2:\n                  _context5.next = 4;\n                  return _this2.$http.put('users/' + _this2.editForm.id, {\n                    email: _this2.editForm.email,\n                    mobile: _this2.editForm.mobile\n                  });\n\n                case 4:\n                  _ref7 = _context5.sent;\n                  res = _ref7.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context5.next = 8;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", _this2.$message.error('更新用户信息失败！'));\n\n                case 8:\n                  //关闭对话框\n                  _this2.editDialogVisible = false; //刷新数据列表\n\n                  _this2.getUserList(); //提示修改成功\n\n\n                  _this2.$message.success('更新用户信息成功！');\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x4) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    },\n    //根据Id删除对应的用户信息\n    removeUserById: function () {\n      var _removeUserById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(id) {\n        var confirmResult, _ref8, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context6.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context6.next = 7;\n                return this.$http.delete('users/' + id);\n\n              case 7:\n                _ref8 = _context6.sent;\n                res = _ref8.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.error('删除用户失败！'));\n\n              case 11:\n                this.$message.success('删除用户成功！');\n                this.getUserList();\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function removeUserById(_x5) {\n        return _removeUserById.apply(this, arguments);\n      }\n\n      return removeUserById;\n    }(),\n    //展示分配角色的对话框\n    setRole: function () {\n      var _setRole = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(userInfo) {\n        var _ref9, res;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.userInfo = userInfo; //在展示对话框之前，获取所有角色的列表\n\n                _context7.next = 3;\n                return this.$http.get('roles');\n\n              case 3:\n                _ref9 = _context7.sent;\n                res = _ref9.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.$message.error('获取角色列表失败！'));\n\n              case 7:\n                this.roleList = res.data;\n                this.setRoleDialogVisible = true;\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setRole(_x6) {\n        return _setRole.apply(this, arguments);\n      }\n\n      return setRole;\n    }(),\n    //点击按钮，分配角色\n    saveRoleInfo: function () {\n      var _saveRoleInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _ref10, res;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this.selectedRoleId) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('请选择要分配的角色！'));\n\n              case 2:\n                _context8.next = 4;\n                return this.$http.put(\"users/\".concat(this.userInfo.id, \"/role\"), {\n                  rid: this.selectedRoleId\n                });\n\n              case 4:\n                _ref10 = _context8.sent;\n                res = _ref10.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('更新角色失败！'));\n\n              case 8:\n                this.$message.success('更新角色成功！');\n                this.getUserList();\n                this.setRoleDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function saveRoleInfo() {\n        return _saveRoleInfo.apply(this, arguments);\n      }\n\n      return saveRoleInfo;\n    }(),\n    //监听分配角色对话框的关闭事件\n    setRoleDialogClosed: function setRoleDialogClosed() {\n      this.selectedRoleId = '';\n      this.userInfo = {};\n    }\n  }\n};",{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图区域 -->\n\t\t<el-card>\n\t\t  <!-- 搜索与添加区域 -->\n\t\t\t<el-row :gutter=\"20\">\n\t\t\t\t<el-col :span=\"8\">\n\t\t\t\t\t<el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n\t\t\t\t\t    <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n\t\t\t\t\t  </el-input>\n\t\t\t\t</el-col>\n\t\t\t\t<el-col :span=\"4\">\n\t\t\t\t\t<el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t\t\n\t\t\t<!-- 用户列表区域 -->\n\t\t\t<el-table :data=\"userlist\" border stripe>\n\t\t\t\t<el-table-column type=\"index\"></el-table-column>\n\t\t\t\t<el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\n\t\t\t\t<el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n\t\t\t\t<el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\n\t\t\t\t<el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\n\t\t\t\t<el-table-column label=\"状态\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChange(scope.row)\">\n\t\t\t\t\t\t</el-switch>\n\t\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column label=\"操作\" width=\"180px\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<!-- 修改按钮 -->\n\t\t\t\t\t\t<el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\n\t\t\t\t\t\t @click=\"showEditDialog(scope.row.id)\"></el-button>\n\t\t\t\t\t\t<!-- 删除按钮 -->\n\t\t\t\t\t\t<el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeUserById(scope.row.id)\"></el-button>\n\t\t\t\t\t\t<!-- 分配角色按钮 -->\n\t\t\t\t\t\t<el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\n\t\t\t\t\t\t      <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"\n\t\t\t\t\t\t\t  @click=\"setRole(scope.row)\"></el-button>\n\t\t\t\t\t\t    </el-tooltip>\n\t\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\t\t\t<!-- 分页区域 -->\n\t\t\t <el-pagination\n\t\t\t      @size-change=\"handleSizeChange\"\n\t\t\t      @current-change=\"handleCurrentChange\"\n\t\t\t      :current-page=\"queryInfo.pagenum\"\n\t\t\t      :page-sizes=\"[1, 2, 5, 10]\"\n\t\t\t      :page-size=\"queryInfo.pagesize\"\n\t\t\t      layout=\"total, sizes, prev, pager, next, jumper\"\n\t\t\t      :total=\"total\">\n\t\t\t    </el-pagination>\n\t\t</el-card>\n\t\t<!-- 添加用户的对话框 -->\n\t\t<el-dialog\n\t\t  title=\"添加用户\"\n\t\t  :visible.sync=\"addDialogVisible\"\n\t\t  width=\"50%\" @close=\"addDialogClosed\">\n\t\t  <!-- 内容主题区域 -->\n\t\t  <el-form :model=\"addForm\" :rules=\"addFormRules\"\n\t\t  ref=\"addFormRef\" label-width=\"70px\">\n\t\t    <el-form-item label=\"用户名\" prop=\"username\">\n\t\t      <el-input v-model=\"addForm.username\"></el-input>\n\t\t    </el-form-item>\n\t\t\t<el-form-item label=\"密码\" prop=\"password\">\n\t\t\t  <el-input v-model=\"addForm.password\"></el-input>\n\t\t\t</el-form-item>\n\t\t\t<el-form-item label=\"邮箱\" prop=\"email\">\n\t\t\t  <el-input v-model=\"addForm.email\"></el-input>\n\t\t\t</el-form-item>\n\t\t\t<el-form-item label=\"手机\" prop=\"mobile\">\n\t\t\t  <el-input v-model=\"addForm.mobile\"></el-input>\n\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t  <!-- 底部区域 -->\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n        <!-- 修改用户的对话框-->\n\t\t<el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\"\n\t\t  width=\"50%\" @close=\"editDialogClosed\">\n\t\t  <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" \n\t\t  label-width=\"70px\">\n\t\t    <el-form-item label=\"用户名\">\n\t\t      <el-input v-model=\"editForm.username\" disabled></el-input>\n\t\t    </el-form-item>\n\t\t\t<el-form-item label=\"邮箱\" prop=\"email\">\n\t\t\t  <el-input v-model=\"editForm.email\"></el-input>\n\t\t\t</el-form-item>\n\t\t\t<el-form-item label=\"手机\" prop=\"mobile\">\n\t\t\t  <el-input v-model=\"editForm.mobile\"></el-input>\n\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t\t\n\t\t<!-- 分配角色的对话框 -->\n\t\t<el-dialog\n\t\t  title=\"分配角色\" :visible.sync=\"setRoleDialogVisible\" width=\"50%\" @close=\"setRoleDialogClosed\">\n\t\t  <div>\n\t\t\t  <p>当前的用户: {{userInfo.username}}</p>\n\t\t\t  <p>当前的角色: {{userInfo.role_name}}</p>\n\t\t\t  <p>分配新角色:\n\t\t\t   <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\">\n\t\t\t      <el-option\n\t\t\t        v-for=\"item in roleList\"\n\t\t\t        :key=\"item.id\"\n\t\t\t        :label=\"item.roleName\"\n\t\t\t        :value=\"item.id\">\n\t\t\t      </el-option>\n\t\t\t    </el-select>\n\t\t\t  </p>\n\t\t  </div>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n\n<script>\nexport default{\n\tdata(){\n\t\t//验证邮箱的规则\n\t\tvar checkEmail = (rule, value, cb) => {\n\t\t\t//验证邮箱的正则表达式\n\t\t\tconst regEmail =  /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n\n\n\t\t\t\n\t\t\tif(regEmail.test(value)){\n\t\t\t\t//合法的邮箱\n\t\t\t\treturn cb()\n\t\t\t}\n\t\t\tcb(new Error('请输入合法的邮箱'))\n\t\t}\n\t\t//验证手机号的规则\n\t\tvar checkMobile = (rule, value, cb) => {\n\t\t\t//验证手机号的正则表达式\n\t\t\tconst regMobile = /^1[3456789]\\d{9}$/\n\t\t\t\n\t\t\tif(regMobile.test(value)){\n\t\t\t\treturn cb()\n\t\t\t}\n\t\t\tcb(new Error('请输入合法的手机号'))\n\t\t}\n\t\treturn {\n\t\t\t//获取用户列表的参数对象\n\t\t\tqueryInfo: {\n\t\t\t\tquery: '',\n\t\t\t\t//当前的页数\n\t\t\t\tpagenum: 1,\n\t\t\t\t//当前每页显示多少条数据\n\t\t\t\tpagesize: 2\n\t\t\t},\n\t\t\tuserlist: [],\n\t\t\ttotal: 0,\n\t\t\t//控制添加用户对话框的显示与隐藏\n\t\t\taddDialogVisible: false,\n\t\t\t//添加用户的表单数据\n\t\t\taddForm: {\n\t\t\t\tusername: '',\n\t\t\t\tpassword: '',\n\t\t\t\temail: '',\n\t\t\t\tmobile: ''\n\t\t\t},\n\t\t\t//添加表单的验证规则对象\n\t\t\taddFormRules: {\n\t\t\t\tusername: [\n\t\t\t\t\t{ required: true, message: '请输入用户名', trigger: 'blur'},\n\t\t\t\t\t{ min: 3, max: 10, message: '用户名的长度在3~10个字符之间', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tpassword: [\n\t\t\t\t\t{ required: true, message: '请输入密码', trigger: 'blur'},\n\t\t\t\t\t{ min: 6, max: 15, message: '密码的长度在6~15个字符之间', trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\temail: [\n\t\t\t\t\t{ required: true, message: '请输入邮箱', trigger: 'blur'},\n\t\t\t\t\t{validator: checkEmail, trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tmobile: [\n\t\t\t\t\t{ required: true, message: '请输入手机号', trigger: 'blur'},\n\t\t\t\t\t{validator: checkMobile, trigger: 'blur'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t//控制修改用户对话框的显示与隐藏\n\t\t\teditDialogVisible: false,\n\t\t\t//查询到的用户信息对象\n\t\t\teditForm: {},\n\t\t\t//修改表单的验证规则对象\n\t\t\teditFormRules: {\n\t\t\t\temail: [\n\t\t\t\t\t{ required: true, message: '请输入用户邮箱', trigger: 'blur'},\n\t\t\t\t\t{validator: checkEmail, trigger: 'blur'}\n\t\t\t\t],\n\t\t\t\tmobile: [\n\t\t\t\t \t{ required: true, message: '请输入用户手机号', trigger: 'blur'},\n\t\t\t\t \t{validator: checkMobile, trigger: 'blur'}\n\t\t\t\t ]\n\t\t\t},\n\t\t\t//控制分配角色对话框的显示与隐藏\n\t\t\tsetRoleDialogVisible: false,\n\t\t\t//需要被分配角色的用户信息\n\t\t\tuserInfo: {},\n\t\t\t//所有角色的数据列表\n\t\t\troleList: [],\n\t\t\t//已选中的角色Id值\n\t\t\tselectedRoleId: ''\n\t\t}\n\t},\n\tcreated(){\n\t\tthis.getUserList()\n\t},\n\tmethods: {\n\t\tasync getUserList(){\n\t\t\tconst { data: res } = await this.$http.get('users', { \n\t\t\t\tparams: this.queryInfo\n\t\t\t\t})\n\t\t\t\tif(res.meta.status !== 200) {\n\t\t\t\t\treturn this.$message.error('获取用户列表失败！')\n\t\t\t\t}\n\t\t\tthis.userlist = res.data.users\n\t\t\tthis.total = res.data.total\n\t\t\tconsole.log(res)\n\t\t},\n\t\t//监听pagesize改变的事件\n\t\thandleSizeChange(newSize){\n\t\t\t//console.log(newSize)\n\t\t\tthis.queryInfo.pagesize = newSize\n\t\t\tthis.getUserList()\n\t\t},\n\t\t//监听页码值改变的事件\n\t\thandleCurrentChange(newPage){\n\t\t\tconsole.log(newPage)\n\t\t\tthis.queryInfo.pagenum = newPage\n\t\t\tthis.getUserList()\n\t\t},\n\t\t//监听switch开关状态的改变\n\t\tasync userStateChange(userinfo){\n\t\t\tconsole.log(userinfo)\n\t\t\tconst {data: res} = await this.$http.put(`users/${userinfo.id}/state/${userinfo.mg_state}`)\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\tuserinfo.mg_state = !userinfo.mg_state\n\t\t\t\treturn this.$message.error('更新用户状态失败!')\n\t\t\t}\n\t\t\tthis.$message.success('更新用户状态成功！')\n\t\t},\n\t\t//监听添加用户对话框的关闭事件\n\t\taddDialogClosed(){\n\t\t\tthis.$refs.addFormRef.resetFields()\n\t\t},\n\t\t//点击按钮，添加新用户\n\t\taddUser(){\n\t\t\tthis.$refs.addFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return\n\t\t\t\t//可以发起添加用户的网络请求\n\t\t\t\tconst {data: res} = await this.$http.post('users', this.addForm)\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 201){\n\t\t\t\t\tthis.$message.error('添加用户失败！')\n\t\t\t\t}\n\t\t\t\tthis.$message.success('添加用户成功！')\n\t\t\t\t//隐藏添加用户的对话框\n\t\t\t\tthis.addDialogVisible = false\n\t\t\t\t//重新获取用户列表数据\n\t\t\t\tthis.getUserList()\n\t\t\t})\n\t\t},\n\t\t//展示编辑用户的对话框\n\t\tasync showEditDialog(id){\n\t\t\t//console.log(id)\n\t\t\tconst {data: res} = await this.$http.get('users/' + id)\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('查询用户信息失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.editForm = res.data\n\t\t\tthis.editDialogVisible = true\n\t\t\t\n\t\t\n\t\t},\n\t\t//监听修改用户对话框的关闭事件\n\t\teditDialogClosed(){\n\t\t\tthis.$refs.editFormRef.resetFields()\n\t\t},\n\t\t//修改用户信息并提交\n\t\teditUserInfo(){\n\t\t\tthis.$refs.editFormRef.validate(async valid=> {\n\t\t\t\tif(!valid) return\n\t\t\t\t//发起修改用户信息的数据请求\n\t\t\t\tconst{data: res} = await this.$http.put('users/' + this.editForm.id, {\n\t\t\t\t\temail: this.editForm.email, \n\t\t\t\t    mobile: this.editForm.mobile\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\t\treturn this.$message.error('更新用户信息失败！')\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//关闭对话框\n\t\t\t\t\tthis.editDialogVisible = false\n\t\t\t\t\t//刷新数据列表\n\t\t\t\t\tthis.getUserList()\n\t\t\t\t\t//提示修改成功\n\t\t\t\t\tthis.$message.success('更新用户信息成功！')\n\t\t\t})\n\t\t},\n\t\t//根据Id删除对应的用户信息\n\t\tasync removeUserById(id) {\n\t\t\t//弹框询问用户是否删除数据\n\t\t\tconst confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n\t\t\t          confirmButtonText: '确定',\n\t\t\t          cancelButtonText: '取消',\n\t\t\t          type: 'warning'\n\t\t\t        }\n\t\t\t\t).catch(err => err)\n\t\t\t\t\n\t\t\t//如果用户确认删除，则返回值为字符串 confirm\t\n\t\t\t//如果用户取消删除，则返回值为字符串 cancel\n\t\t\t//console.log(confirmResult)\n\t\t\tif(confirmResult !== 'confirm'){\n\t\t\t\treturn this.$message.info('已取消删除')\n\t\t\t}\n\t\t\t\n\t\t\tconst {data: res} = await this.$http.delete('users/' + id)\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('删除用户失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.$message.success('删除用户成功！')\n\t\t\tthis.getUserList()\n\t\t},\n\t\t//展示分配角色的对话框\n\t\tasync setRole(userInfo) {\n\t\t\tthis.userInfo = userInfo\n\t\t\t\n\t\t\t//在展示对话框之前，获取所有角色的列表\n\t\t\tconst {data: res} = await this.$http.get('roles')\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取角色列表失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.roleList = res.data\n\t\t\t\n\t\t\tthis.setRoleDialogVisible = true\n\t\t},\n\t\t//点击按钮，分配角色\n\t\tasync saveRoleInfo() {\n\t\t\tif(!this.selectedRoleId){\n\t\t\t\treturn this.$message.error('请选择要分配的角色！')\n\t\t\t}\n\t\t\t\n\t\t\tconst {data: res} = await this.$http.put(`users/${this.userInfo.id}/role`, {\n\t\t\t\trid: this.selectedRoleId\n\t\t\t})\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('更新角色失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.$message.success('更新角色成功！')\n\t\t\tthis.getUserList()\n\t\t\tthis.setRoleDialogVisible = false\n\t\t},\n\t\t//监听分配角色对话框的关闭事件\n\t\tsetRoleDialogClosed() {\n\t\t\tthis.selectedRoleId = ''\n\t\t\tthis.userInfo = {}\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"less\" scoped>\n\t\n</style>\n"],"sourceRoot":"src/components/user"}]}