{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/Login.vue","mtime":1611629665246},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t//这是登录表单的数据绑定对象\n\t\t\tloginForm:{\n\t\t\t\tusername: 'admin',\n\t\t\t\tpassword: '123456'\n\t\t\t},\n\t\t\t//这是表单的验证规则对象\n\t\t\tloginFormRules:{\n\t\t\t\t//验证用户名是否合法\n\t\t\t\tusername: [\n\t\t\t\t\t{ required: true, message: '请输入登录名称', trigger: 'blur' },\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t//验证密码是否合法\n\t\t\t\tpassword: [\n\t\t\t\t\t{ required: true, message: '请输入登录密码', trigger: 'blur' },\n\t\t\t\t\t{ min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\tmethods:{\n\t\t//点击重置按钮，重置登录表单\n\t\tresetLoginForm(){\n\t\t\t//console.log(this)\n\t\t\tthis.$refs.loginFormRef.resetFields();\n\t\t},\n\t\tlogin(){\n\t\t\tthis.$refs.loginFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return;\n\t\t\t    const {data: res} = await this.$http.post('login', this.loginForm);\n\t\t\t    if(res.meta.status !== 200) return this.$message.error('登录失败！');\n\t\t\t\tthis.$message.success('登录成功');\n\t\t\t\t//1.将登录成功之后的token保存到客户端的sessionStorage中\n\t\t\t\t\t//1.1项目中除了登录之外的其他API接口，必须在登录之后才能访问\n\t\t\t\t\t//1.2token只应在当前网站打开期间生效，所以将token保存在sessionStorage中\n\t\t\t\twindow.sessionStorage.setItem('token', res.data.token);\n\t\t\t\t//2.通过编程式导航跳转到后台主页，路由地址是/home\n\t\t\t\tthis.$router.push('/home');\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t}\n}; \n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"login_container\">\n\t\t<div class=\"login_box\">\n\t\t\t<!-- 头像区域 -->\n\t\t\t<div class=\"avatar_box\">\n\t\t\t\t<img src=\"../assets/logo.png\" />\n\t\t\t</div>\n\t\t\t<!-- 登录表单区域 -->\n\t\t\t<el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"0px\" class=\"login_form\">\n\t\t\t\t<!-- 用户名 -->\n\t\t\t  <el-form-item prop=\"username\">\n\t\t\t    <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\n\t\t\t  </el-form-item>\n\t\t\t  <!-- 密码 -->\n\t\t\t  <el-form-item prop=\"password\">\n\t\t\t    <el-input v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-suo\" type=\"password\"></el-input>\n\t\t\t  </el-form-item>\n\t\t\t  <!-- 按钮区域 -->\n\t\t\t  <el-form-item class=\"btns\">\n\t\t\t     <el-button type=\"primary\" @click=\"login\">登录</el-button>\n\t\t\t\t  <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n\t\t\t  </el-form-item>\n\t\t\t  </el-form>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t//这是登录表单的数据绑定对象\n\t\t\tloginForm:{\n\t\t\t\tusername: 'admin',\n\t\t\t\tpassword: '123456'\n\t\t\t},\n\t\t\t//这是表单的验证规则对象\n\t\t\tloginFormRules:{\n\t\t\t\t//验证用户名是否合法\n\t\t\t\tusername: [\n\t\t\t\t\t{ required: true, message: '请输入登录名称', trigger: 'blur' },\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t//验证密码是否合法\n\t\t\t\tpassword: [\n\t\t\t\t\t{ required: true, message: '请输入登录密码', trigger: 'blur' },\n\t\t\t\t\t{ min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\tmethods:{\n\t\t//点击重置按钮，重置登录表单\n\t\tresetLoginForm(){\n\t\t\t//console.log(this)\n\t\t\tthis.$refs.loginFormRef.resetFields();\n\t\t},\n\t\tlogin(){\n\t\t\tthis.$refs.loginFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return;\n\t\t\t    const {data: res} = await this.$http.post('login', this.loginForm);\n\t\t\t    if(res.meta.status !== 200) return this.$message.error('登录失败！');\n\t\t\t\tthis.$message.success('登录成功');\n\t\t\t\t//1.将登录成功之后的token保存到客户端的sessionStorage中\n\t\t\t\t\t//1.1项目中除了登录之外的其他API接口，必须在登录之后才能访问\n\t\t\t\t\t//1.2token只应在当前网站打开期间生效，所以将token保存在sessionStorage中\n\t\t\t\twindow.sessionStorage.setItem('token', res.data.token);\n\t\t\t\t//2.通过编程式导航跳转到后台主页，路由地址是/home\n\t\t\t\tthis.$router.push('/home');\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t}\n}; \n</script>\n\n<style lang=\"less\" scoped>\n\t.login_container{\n\t\tbackground-color: #2b4b6b;\n\t\theight: 100%;\n\t}\n\t.login_box{\n\t\twidth: 450px;\n\t\theight: 300px;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 3px;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\t\n\t.avatar_box{\n\t\theight: 130px;\n\t\twidth: 130px;\n\t\tborder: 1px solid #eee;\n\t\tborder-radius: 50%;\n\t\tpadding: 10px;\n\t\tbox-shadow: 0 0 10px #ddd;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbackground-color: #fff;\n\t\timg{\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\tborder-radius: 50%;\n\t\t\tbackground-color: #eee;\n\t\t}\n\t}\t\n\t}\n\t.login_form{\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\tpadding: 0 20px;\n\t\tbox-sizing: border-box;\n\t}\n\t.btns{\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t}\n</style>"]}]}