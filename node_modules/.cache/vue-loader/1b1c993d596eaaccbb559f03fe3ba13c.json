{"remainingRequest":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/suncc/Documents/HBuilderProjects/mall/src/components/goods/Params.vue","mtime":1611111263609},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/suncc/Documents/HBuilderProjects/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t//商品分类列表\n\t\t\tcatelist: [],\n\t\t\t//级联选择框的配置对象\n\t\t\tcateProps: {\n\t\t\t\tvalue: 'cat_id',\n\t\t\t\tlabel: 'cat_name',\n\t\t\t\tchildren: 'children'\n\t\t\t},\n\t\t\t//级联选择框双向绑定到的数组\n\t\t\tselectedCateKeys: [],\n\t\t\t//被激活的页签的名称\n\t\t\tactiveName: 'many',\n\t\t\t//动态参数的数据\n\t\t\tmanyTableData: [],\n\t\t\t//静态属性的数据\n\t\t\tonlyTableData: [],\n\t\t\t//控制添加对话框的显示与隐藏\n\t\t\taddDialogVisible: false,\n\t\t\t//添加参数的表单数据对象\n\t\t\taddForm: {\n\t\t\t\tattr_name: ''\n\t\t\t},\n\t\t\t//添加表单的验证规则对象\n\t\t\taddFormRules: {\n\t\t\t\tattr_name:[\n\t\t\t\t\t{ required: true, message: '请输入参数名称', trigger: 'blur'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t//控制修改对话框的显示与隐藏\n\t\t\teditDialogVisible: false,\n\t\t\t//修改的表单数据对象\n\t\t\teditForm: {},\n\t\t\t//修改表单的验证规则对象\n\t\t\teditFormRules:{\n\t\t\t\tattr_name:[\n\t\t\t\t\t{ required: true, message: '请输入参数名称', trigger: 'blur'}\n\t\t\t\t]\n\t\t\t}\n\t\t\t\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getCateList()\n\t},\n\tmethods: {\n\t\t//获取所有的商品分类列表\n\t\tasync getCateList(){\n\t\t\tconst {data: res} = await this.$http.get('categories')\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取商品分类失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.catelist = res.data\n\t\t\t\n\t\t\tconsole.log(this.catelist)\n\t\t},\n\t\t//级联选择框选中项变化，会触发这个函数\n\t\thandleChange(){\n\t\t\tthis.getParamsData()\n\t\t},\n\t\t//tab页签点击事件的处理函数\n\t\thandleTabClick(){\n\t\t\tconsole.log(this.activeName)\n\t\t\tthis.getParamsData()\n\t\t},\n\t\t//获取参数的列表数据\n\t\tasync getParamsData() {\n\t\t\t//证明选中的不是三级分类\n\t\t\tif(this.selectedCateKeys.length !== 3){\n\t\t\t\tthis.selectedCateKeys = []\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\t//证明选中的是三级分类\n\t\t\tconsole.log(this.selectedCateKeys)\n\t\t\t//根据所选分类的id,和当前所处的面板，获取对应的参数\n\t\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes`,\n\t\t\t{params: {sel: this.activeName}})\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取参数列表失败！')\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tres.data.forEach(item => {\n\t\t\t\titem.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : [],\n\t\t\t\t//控制文本框的显示与隐藏\n\t\t\t\titem.inputVisible = false\n\t\t\t\t//文本框中输入的值\n\t\t\t\titem.inputValue = ''\n\t\t\t})\n\t\t\tconsole.log(res.data)\n\t\t\tif(this.activeName === 'many'){\n\t\t\t\tthis.manyTableData = res.data\n\t\t\t}else {\n\t\t\t\tthis.onlyTableData = res.data\n\t\t\t}\n\t\t},\n\t\t//监听添加对话框的关闭事件\n\t\taddDialogClosed() {\n\t\t\tthis.$refs.addFormRef.resetFields()\n\t\t},\n\t\t//点击按钮，添加参数\n\t\taddParams(){\n\t\t\tthis.$refs.addFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return\n\t\t\t\tconst {data: res} = await this.$http.post(`categories/\n\t\t\t\t${this.cateId}/attributes`, { attr_name: this.addForm.attr_name,\n\t\t\t\tattr_sel: this.activeName })\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 201){\n\t\t\t\t\treturn this.$message.error('添加参数失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('添加参数成功！')\n\t\t\t\tthis.addDialogVisible = false\n\t\t\t\tthis.getParamsData()\n\t\t\t})\n\t\t},\n\t//点击按钮，展示修改的对话框\n\tasync showEditDialog(attr_id){\n\t\t//查询当前参数的信息\n\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes/${attr_id}`,\n\t\t{ params: {attr_sel: this.activeName }})\n\t\t\n\t\tif(res.meta.status !== 200){\n\t\t\treturn this.$message.error('获取参数信息失败！')\n\t\t}\n\t\tthis.editForm = res.data\n\t\tthis.editDialogVisible = true\n\t},\n\t//重置修改的表单\n\teditDialogClosed(){\n\t\tthis.$refs.editFormRef.resetFields()\n\t},\n\t//点击按钮，修改参数信息\n\teditParams(){\n\t\tthis.$refs.editFormRef.validate(async valid => {\n\t\t\tif(!valid) return\n\t\t\tconst {data: res} = await this.$http.put(`categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\n\t\t\t{ attr_name: this.editForm.attr_name, attr_sel: this.activeName })\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('修改参数失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.$message.success('修改参数成功！')\n\t\t\tthis.getParamsData()\n\t\t\tthis.editDialogVisible = false\n\t\t})\n\t},\n\t//根据id删除对应的参数项\n\tasync removeParams(attr_id){\n\t\tconst confirmResult = await this.$confirm('此操作将永久删除该参数, 是否继续?', '提示', {\n\t\t          confirmButtonText: '确定',\n\t\t          cancelButtonText: '取消',\n\t\t          type: 'warning'\n\t\t        }).catch(err => err)\n\t\t\t\t\n\t\t\t\t//用户取消了删除的操作\n\t\t\t\tif(confirmResult !== 'confirm'){\n\t\t\t\t\treturn this.$message.info('已取消删除！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//删除的业务逻辑\n\t\t\t\tconst {data: res} = await this.$http.delete(`categories/${this.cateId}/attributes/${attr_id}`)\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\treturn this.$message.error('删除参数失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('删除参数成功！')\n\t\t\t\tthis.getParamsData()\n\t},\n\t//文本框失去焦点或摁下了enter都会触发\n\tasync handleInputConfirm(row){\n\t\tif(row.inputValue.trim().length === 0){\n\t\t\trow.inputValue = ''\n\t\t\trow.inputVisible = false\n\t\t\treturn\n\t\t}\n\t\t//如果没有return，则证明输入的内容，需要做后续处理\n\t\trow.attr_vals.push(row.inputValue.trim())\n\t\trow.inputValue = ''\n\t\trow.inputVisible = false\n\t\t//需要发起请求，保存这次操作\n\t\tthis.saveAttrVals(row)\n\t},\n\t//将对 attr_vals的操作，保存到数据库中\n\tasync saveAttrVals(row){\n\t\t//需要发起请求，保存这次操作\n\t\tconst {data: res} = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`,\n\t\t{ attr_name: row.attr_name, attr_sel: row.attr_sel, attr_vals: row.attr_vals.join(' ')})\n\t\t\n\t\tif(res.meta.status !== 200){\n\t\t\treturn this.$message.error('修改参数项失败！')\n\t\t}\n\t\t\n\t\tthis.$message.success('修改参数项成功！')\n\t},\n\t//点击按钮，展示文本输入框\n\tshowInput(row){\n\t\trow.inputVisible = true\n\t\t//让文本框自动获得焦点\n\t\t//$nextTick方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\n\t\t this.$nextTick(_ => {\n\t\t          this.$refs.saveTagInput.$refs.input.focus();\n\t\t        });\n\t},\n\t//删除对应的参数可选项\n\thandleClose(i, row){\n\t\trow.attr_vals.splice(i, 1)\n\t\tthis.saveAttrVals(row)\n\t}\n\t\t\n\t},\n\tcomputed: {\n\t\t//如果按钮需要被禁用，则返回true,否则返回false\n\t\tisBtnDisabled(){\n\t\t\tif(this.selectedCateKeys.length !== 3){\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\t//当前选中的三级分类的id\n\t\tcateId(){\n\t\t\tif(this.selectedCateKeys.length === 3){\n\t\t\t\treturn this.selectedCateKeys[2]\n\t\t\t}\n\t\t\treturn null\n\t\t},\n\t\t//动态计算标题的文本\n\t\ttitleText(){\n\t\t\tif(this.activeName === 'many'){\n\t\t\t\treturn '动态参数'\n\t\t\t}\n\t\t\treturn '静态属性'\n\t\t}\n\t}\n\t\n}\n",{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n\t<div>\n\t\t<!-- 面包屑导航区域 -->\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\n\t\t  <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n\t\t  <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t\n\t\t<!-- 卡片视图区域 -->\n\t\t<el-card>\n\t\t\t<!-- 警告区域 -->\n\t\t\t<el-alert title=\"注意:只允许为第三级分类设置相关参数!\" type=\"warning\" :closable=\"false\" show-icon>\n\t\t\t  </el-alert>\n\t\t\t  \n\t\t\t  <!-- 选择商品分类区域 -->\n\t\t\t  <el-row class=\"cat_opt\">\n\t\t\t\t  <el-col>\n\t\t\t\t\t  <span>选择商品分类：</span>\n\t\t\t\t\t  <!-- 选择商品分类的级联选择框 -->\n\t\t\t\t\t   <el-cascader expand-trigger=\"hover\" v-model=\"selectedCateKeys\" :options=\"catelist\" \n\t\t\t\t\t   :props=\"cateProps\" @change=\"handleChange\"></el-cascader>\n\t\t\t\t  </el-col>\n\t\t\t  </el-row>\n\t\t\t  \n\t\t\t  <!-- tab 页签区域 -->\n\t\t\t   <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\n\t\t\t\t   <!-- 添加动态参数的面板 -->\n\t\t\t      <el-tab-pane label=\"动态参数\" name=\"many\">\n\t\t\t\t\t  <!-- 添加参数的按钮 -->\n\t\t\t\t\t  <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\"\n\t\t\t\t\t  @click=\"addDialogVisible = true\">添加参数</el-button>\n\t\t\t\t\t  <!-- 动态参数表格 -->\n\t\t\t\t\t  <el-table :data=\"manyTableData\" border stripe>\n\t\t\t\t\t\t  <!-- 展开行 -->\n\t\t\t\t\t\t   <el-table-column type=\"expand\">\n\t\t\t\t\t\t\t   <template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t   <!-- 循环渲染Tag标签 -->\n\t\t\t\t\t\t\t\t   <el-tag v-for=\"(item, i) in scope.row.attr_vals\"\n\t\t\t\t\t\t\t\t   :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\n\t\t\t\t\t\t\t\t   <!-- 输入文本框 -->\n\t\t\t\t\t\t\t\t   <el-input\n\t\t\t\t\t\t\t\t     class=\"input-new-tag\"\n\t\t\t\t\t\t\t\t     v-if=\"scope.row.inputVisible\"\n\t\t\t\t\t\t\t\t     v-model=\"scope.row.inputValue\"\n\t\t\t\t\t\t\t\t     ref=\"saveTagInput\"\n\t\t\t\t\t\t\t\t     size=\"small\"\n\t\t\t\t\t\t\t\t     @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n\t\t\t\t\t\t\t\t     @blur=\"handleInputConfirm(scope.row)\"\n\t\t\t\t\t\t\t\t   >\n\t\t\t\t\t\t\t\t   </el-input>\n\t\t\t\t\t\t\t\t   <!-- 添加按钮 -->\n\t\t\t\t\t\t\t\t   <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\n\t\t\t\t\t\t\t   </template>\n\t\t\t\t\t\t   </el-table-column>\n\t\t\t\t\t\t  <!-- 索引列 -->\n\t\t\t\t\t\t  <el-table-column type=\"index\"></el-table-column>\n\t\t\t\t\t\t  <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\n\t\t\t\t\t\t  <el-table-column label=\"操作\">\n\t\t\t\t\t\t\t  <template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t  <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\n\t\t\t\t\t\t\t\t   <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\n\t\t\t\t\t\t\t  </template>\n\t\t\t\t\t\t  </el-table-column>\n\t\t\t\t\t  </el-table>\n\t\t\t\t  </el-tab-pane>\n\t\t\t\t  <!-- 添加静态属性的面板 -->\n\t\t\t      <el-tab-pane label=\"静态属性\" name=\"only\">\n\t\t\t\t\t  <!-- 添加属性的按钮 -->\n\t\t\t\t\t    <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\"\n\t\t\t\t\t\t@click=\"addDialogVisible = true\">添加属性</el-button>\n\t\t\t\t\t\t<!-- 静态属性表格 -->\n\t\t\t\t\t\t<el-table :data=\"onlyTableData\" border stripe>\n\t\t\t\t\t\t\t\t\t\t\t\t  <!-- 展开行 -->\n\t\t\t\t\t\t\t\t\t\t\t\t   <el-table-column type=\"expand\"></el-table-column>\n\t\t\t\t\t\t\t\t\t\t\t\t  <!-- 索引列 -->\n\t\t\t\t\t\t\t\t\t\t\t\t  <el-table-column type=\"index\"></el-table-column>\n\t\t\t\t\t\t\t\t\t\t\t\t  <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\n\t\t\t\t\t\t\t\t\t\t\t\t  <el-table-column label=\"操作\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t  </template>\n\t\t\t\t\t\t\t\t\t\t\t\t  </el-table-column>\n\t\t\t\t\t\t</el-table>\n\t\t\t\t  </el-tab-pane>\n\t\t\t    </el-tabs>\n\t\t</el-card>\n\t\t\n\t\t<!-- 添加参数的对话框 -->\n\t\t<el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialogVisible\"\n\t\t width=\"50%\" @close=\"addDialogClosed\">\n\t\t  <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n\t\t    <el-form-item :label=\"titleText\" prop=\"attr_name\">\n\t\t      <el-input v-model=\"addForm.attr_name\"></el-input>\n\t\t    </el-form-item>\n\t\t\t</el-form>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t\t\n\t\t<!-- 修改参数的对话框 -->\n\t\t<el-dialog :title=\"'修改' + titleText\" :visible.sync=\"editDialogVisible\"\n\t\t width=\"50%\" @close=\"editDialogClosed\">\n\t\t  <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n\t\t    <el-form-item :label=\"titleText\" prop=\"attr_name\">\n\t\t      <el-input v-model=\"editForm.attr_name\"></el-input>\n\t\t    </el-form-item>\n\t\t\t</el-form>\n\t\t  <span slot=\"footer\" class=\"dialog-footer\">\n\t\t    <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n\t\t    <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n\t\t  </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t//商品分类列表\n\t\t\tcatelist: [],\n\t\t\t//级联选择框的配置对象\n\t\t\tcateProps: {\n\t\t\t\tvalue: 'cat_id',\n\t\t\t\tlabel: 'cat_name',\n\t\t\t\tchildren: 'children'\n\t\t\t},\n\t\t\t//级联选择框双向绑定到的数组\n\t\t\tselectedCateKeys: [],\n\t\t\t//被激活的页签的名称\n\t\t\tactiveName: 'many',\n\t\t\t//动态参数的数据\n\t\t\tmanyTableData: [],\n\t\t\t//静态属性的数据\n\t\t\tonlyTableData: [],\n\t\t\t//控制添加对话框的显示与隐藏\n\t\t\taddDialogVisible: false,\n\t\t\t//添加参数的表单数据对象\n\t\t\taddForm: {\n\t\t\t\tattr_name: ''\n\t\t\t},\n\t\t\t//添加表单的验证规则对象\n\t\t\taddFormRules: {\n\t\t\t\tattr_name:[\n\t\t\t\t\t{ required: true, message: '请输入参数名称', trigger: 'blur'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t//控制修改对话框的显示与隐藏\n\t\t\teditDialogVisible: false,\n\t\t\t//修改的表单数据对象\n\t\t\teditForm: {},\n\t\t\t//修改表单的验证规则对象\n\t\t\teditFormRules:{\n\t\t\t\tattr_name:[\n\t\t\t\t\t{ required: true, message: '请输入参数名称', trigger: 'blur'}\n\t\t\t\t]\n\t\t\t}\n\t\t\t\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getCateList()\n\t},\n\tmethods: {\n\t\t//获取所有的商品分类列表\n\t\tasync getCateList(){\n\t\t\tconst {data: res} = await this.$http.get('categories')\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取商品分类失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.catelist = res.data\n\t\t\t\n\t\t\tconsole.log(this.catelist)\n\t\t},\n\t\t//级联选择框选中项变化，会触发这个函数\n\t\thandleChange(){\n\t\t\tthis.getParamsData()\n\t\t},\n\t\t//tab页签点击事件的处理函数\n\t\thandleTabClick(){\n\t\t\tconsole.log(this.activeName)\n\t\t\tthis.getParamsData()\n\t\t},\n\t\t//获取参数的列表数据\n\t\tasync getParamsData() {\n\t\t\t//证明选中的不是三级分类\n\t\t\tif(this.selectedCateKeys.length !== 3){\n\t\t\t\tthis.selectedCateKeys = []\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\t//证明选中的是三级分类\n\t\t\tconsole.log(this.selectedCateKeys)\n\t\t\t//根据所选分类的id,和当前所处的面板，获取对应的参数\n\t\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes`,\n\t\t\t{params: {sel: this.activeName}})\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('获取参数列表失败！')\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tres.data.forEach(item => {\n\t\t\t\titem.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : [],\n\t\t\t\t//控制文本框的显示与隐藏\n\t\t\t\titem.inputVisible = false\n\t\t\t\t//文本框中输入的值\n\t\t\t\titem.inputValue = ''\n\t\t\t})\n\t\t\tconsole.log(res.data)\n\t\t\tif(this.activeName === 'many'){\n\t\t\t\tthis.manyTableData = res.data\n\t\t\t}else {\n\t\t\t\tthis.onlyTableData = res.data\n\t\t\t}\n\t\t},\n\t\t//监听添加对话框的关闭事件\n\t\taddDialogClosed() {\n\t\t\tthis.$refs.addFormRef.resetFields()\n\t\t},\n\t\t//点击按钮，添加参数\n\t\taddParams(){\n\t\t\tthis.$refs.addFormRef.validate(async valid => {\n\t\t\t\tif(!valid) return\n\t\t\t\tconst {data: res} = await this.$http.post(`categories/\n\t\t\t\t${this.cateId}/attributes`, { attr_name: this.addForm.attr_name,\n\t\t\t\tattr_sel: this.activeName })\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 201){\n\t\t\t\t\treturn this.$message.error('添加参数失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('添加参数成功！')\n\t\t\t\tthis.addDialogVisible = false\n\t\t\t\tthis.getParamsData()\n\t\t\t})\n\t\t},\n\t//点击按钮，展示修改的对话框\n\tasync showEditDialog(attr_id){\n\t\t//查询当前参数的信息\n\t\tconst {data: res} = await this.$http.get(`categories/${this.cateId}/attributes/${attr_id}`,\n\t\t{ params: {attr_sel: this.activeName }})\n\t\t\n\t\tif(res.meta.status !== 200){\n\t\t\treturn this.$message.error('获取参数信息失败！')\n\t\t}\n\t\tthis.editForm = res.data\n\t\tthis.editDialogVisible = true\n\t},\n\t//重置修改的表单\n\teditDialogClosed(){\n\t\tthis.$refs.editFormRef.resetFields()\n\t},\n\t//点击按钮，修改参数信息\n\teditParams(){\n\t\tthis.$refs.editFormRef.validate(async valid => {\n\t\t\tif(!valid) return\n\t\t\tconst {data: res} = await this.$http.put(`categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\n\t\t\t{ attr_name: this.editForm.attr_name, attr_sel: this.activeName })\n\t\t\t\n\t\t\tif(res.meta.status !== 200){\n\t\t\t\treturn this.$message.error('修改参数失败！')\n\t\t\t}\n\t\t\t\n\t\t\tthis.$message.success('修改参数成功！')\n\t\t\tthis.getParamsData()\n\t\t\tthis.editDialogVisible = false\n\t\t})\n\t},\n\t//根据id删除对应的参数项\n\tasync removeParams(attr_id){\n\t\tconst confirmResult = await this.$confirm('此操作将永久删除该参数, 是否继续?', '提示', {\n\t\t          confirmButtonText: '确定',\n\t\t          cancelButtonText: '取消',\n\t\t          type: 'warning'\n\t\t        }).catch(err => err)\n\t\t\t\t\n\t\t\t\t//用户取消了删除的操作\n\t\t\t\tif(confirmResult !== 'confirm'){\n\t\t\t\t\treturn this.$message.info('已取消删除！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//删除的业务逻辑\n\t\t\t\tconst {data: res} = await this.$http.delete(`categories/${this.cateId}/attributes/${attr_id}`)\n\t\t\t\t\n\t\t\t\tif(res.meta.status !== 200){\n\t\t\t\t\treturn this.$message.error('删除参数失败！')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$message.success('删除参数成功！')\n\t\t\t\tthis.getParamsData()\n\t},\n\t//文本框失去焦点或摁下了enter都会触发\n\tasync handleInputConfirm(row){\n\t\tif(row.inputValue.trim().length === 0){\n\t\t\trow.inputValue = ''\n\t\t\trow.inputVisible = false\n\t\t\treturn\n\t\t}\n\t\t//如果没有return，则证明输入的内容，需要做后续处理\n\t\trow.attr_vals.push(row.inputValue.trim())\n\t\trow.inputValue = ''\n\t\trow.inputVisible = false\n\t\t//需要发起请求，保存这次操作\n\t\tthis.saveAttrVals(row)\n\t},\n\t//将对 attr_vals的操作，保存到数据库中\n\tasync saveAttrVals(row){\n\t\t//需要发起请求，保存这次操作\n\t\tconst {data: res} = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`,\n\t\t{ attr_name: row.attr_name, attr_sel: row.attr_sel, attr_vals: row.attr_vals.join(' ')})\n\t\t\n\t\tif(res.meta.status !== 200){\n\t\t\treturn this.$message.error('修改参数项失败！')\n\t\t}\n\t\t\n\t\tthis.$message.success('修改参数项成功！')\n\t},\n\t//点击按钮，展示文本输入框\n\tshowInput(row){\n\t\trow.inputVisible = true\n\t\t//让文本框自动获得焦点\n\t\t//$nextTick方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\n\t\t this.$nextTick(_ => {\n\t\t          this.$refs.saveTagInput.$refs.input.focus();\n\t\t        });\n\t},\n\t//删除对应的参数可选项\n\thandleClose(i, row){\n\t\trow.attr_vals.splice(i, 1)\n\t\tthis.saveAttrVals(row)\n\t}\n\t\t\n\t},\n\tcomputed: {\n\t\t//如果按钮需要被禁用，则返回true,否则返回false\n\t\tisBtnDisabled(){\n\t\t\tif(this.selectedCateKeys.length !== 3){\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\t//当前选中的三级分类的id\n\t\tcateId(){\n\t\t\tif(this.selectedCateKeys.length === 3){\n\t\t\t\treturn this.selectedCateKeys[2]\n\t\t\t}\n\t\t\treturn null\n\t\t},\n\t\t//动态计算标题的文本\n\t\ttitleText(){\n\t\t\tif(this.activeName === 'many'){\n\t\t\t\treturn '动态参数'\n\t\t\t}\n\t\t\treturn '静态属性'\n\t\t}\n\t}\n\t\n}\n</script>\n\n<style lang=\"less\" scoped>\n\t.cat_opt{\n\t\tmargin: 15px 0;\n\t}\n\t.el-tag{\n\t\tmargin: 10px;\n\t}\n\t.input-new-tag{\n\t\twidth: 120px;\n\t}\n</style>\n"]}]}